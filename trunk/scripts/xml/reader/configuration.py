"""
Generated by <Python Project Utils>
Visit the project in http://code.google.com/p/python-project-utils/
"""

import xml.etree.ElementTree
import os
from ... import sql

class Configuration:
	@staticmethod
	def read(path, file_name):
		root = xml.etree.ElementTree.parse(os.path.join(path, file_name)).getroot()
		configuration = sql.wrapper.Configuration()

		for child in root:
			if child.tag == "manufacturers":
				Configuration.__read_manufacturers(child, configuration)

		return configuration

	@staticmethod
	def __read_manufacturers(node, configuration):
		for child in node:
			if child.tag == "manufacturer":
				Configuration.__read_manufacturer(child, configuration)

	@staticmethod
	def __read_manufacturer(node, configuration):
		manufacturer = sql.wrapper.Manufacturer(node.attrib["name"])

		for child in node:
			if child.tag == "device":
				Configuration.__read_device(child, manufacturer)

		configuration.add_manufacturer(manufacturer)

	@staticmethod
	def __read_device(node, manufacturer):
		device = sql.wrapper.Device(node.attrib["name"])

		for child in node:
			if child.tag == "media":
				Configuration.__read_media(child, device)

		manufacturer.add_device(device)

	@staticmethod
	def __read_media(node, device):
		compressed = node.attrib["compressed"].lower() == "true" if node.attrib.has_key("compressed") else False
		media = sql.wrapper.Media(compressed, node.attrib["compression_engine"] if compressed else None)

		for child in node:
			if child.tag == "folder":
				Configuration.__read_folder(child, media)

		device.set_media(media)

	@staticmethod
	def __read_folder(node, media):
		compressed = node.attrib["compressed"].lower() == "true" if node.attrib.has_key("compressed") else None
		compression_engine = node.attrib["compression_engine"].lower() == "true" if node.attrib.has_key("compression_engine") else None

		media.add_folder(sql.wrapper.Folder(node.text, node.attrib["alias"], compressed, compression_engine))
