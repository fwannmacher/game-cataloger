"""
Generated by <Python Project Utils>
Visit the project in http://code.google.com/p/python-project-utils/
"""

import pygtk
pygtk.require('2.0')
import gtk
from .. import gtkplus

class EditDialog(gtk.Dialog):
	def __init__(self, name, parent, adapter):
		gtk.Dialog.__init__(self, name, parent, gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, (gtk.STOCK_CLOSE, gtk.RESPONSE_CLOSE))
		self.vbox.set_size_request(480, -1)

		list_view = gtkplus.ListView(adapter.get_items_list())
		index = 1

		for key, value in adapter.get_items_parameters().items():
			list_view.append_column(self._parse_column(key, value, index))
			index += 1

		list_scrolled_window = gtk.ScrolledWindow()
		list_scrolled_window.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
		list_scrolled_window.set_size_request(-1, 200)
		list_scrolled_window.add_with_viewport(list_view)
		self.vbox.pack_start(list_scrolled_window, True)

		button = gtk.Button("Add", gtk.STOCK_ADD)
		button.connect("clicked", AddButtonHandler.handle, self, adapter)
		self.action_area.pack_start(button)
		button = gtk.Button("Edit", gtk.STOCK_EDIT)
		self.action_area.pack_start(button)
		button = gtk.Button("Remove", gtk.STOCK_REMOVE)
		self.action_area.pack_start(button)
		
		self.show_all()

	def _parse_column(self, label, column_type, index):
		column = gtk.TreeViewColumn(label)

		if column_type == "text":
			gtkplus.CellRendererText(column, index)

		column.set_expand(True)
	
		return column

class AddButtonHandler:
	@staticmethod
	def handle(button, parent, adapter):
		dialog = SaveDialog("Add", parent, adapter)
		dialog.run()
		dialog.destroy()

class SaveDialog(gtk.Dialog):
	def __init__(self, name, parent, adapter):
		gtk.Dialog.__init__(self, name, parent, gtk.DIALOG_MODAL | gtk.DIALOG_DESTROY_WITH_PARENT, (gtk.STOCK_SAVE, gtk.RESPONSE_OK, gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL))
		
